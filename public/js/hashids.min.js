!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("Hashids",[],e):"object"==typeof exports?exports.Hashids=e():t.Hashids=e()}(self,function(){return(()=>{"use strict";var s={d:(t,e)=>{for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},t={};s.d(t,{default:()=>e});const n=t=>"bigint"==typeof t||!Number.isNaN(Number(t))&&Math.floor(Number(t))===t,r=t=>"bigint"==typeof t||0<=t&&Number.isSafeInteger(t);function p(t,s){if(0===s.length)return t;const n=[...t];for(let t=n.length-1,e=0,i=0;0<t;t--,e++){e%=s.length,i+=o=s[e].codePointAt(0);var r=(o+e+i)%t,h=n[t],o=n[r];n[r]=h,n[t]=o}return n}const h=/^\+?\d+$/,c=t=>new RegExp(t.map(t=>d(t)).sort((t,e)=>e.length-t.length).join("|")),d=t=>t.replace(/[\s#$()*+,.?[\\\]^{|}-]/g,"\\$&");class e{constructor(t="",e=0,i="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",s="cfhistuCFHISTU"){if("number"!=typeof(this.minLength=e))throw new TypeError(`Hashids: Provided 'minLength' has to be a number (is ${typeof e})`);if("string"!=typeof t)throw new TypeError(`Hashids: Provided 'salt' has to be a string (is ${typeof t})`);if("string"!=typeof i)throw new TypeError(`Hashids: Provided alphabet has to be a string (is ${typeof i})`);const n=Array.from(t),r=Array.from(i),h=Array.from(s);this.salt=n;const o=[...new Set(r)];var a;if(o.length<16)throw new Error(`Hashids: alphabet must contain at least 16 unique characters, provided: ${o.join("")}`);this.alphabet=(a=h,o.filter(t=>!a.includes(t)));var l,s=(l=o,h.filter(t=>l.includes(t)));this.seps=p(s,n),!(0===this.seps.length||3.5<this.alphabet.length/this.seps.length)||(s=Math.ceil(this.alphabet.length/3.5))>this.seps.length&&(g=s-this.seps.length,this.seps.push(...this.alphabet.slice(0,g)),this.alphabet=this.alphabet.slice(g)),this.alphabet=p(this.alphabet,n);var g=Math.ceil(this.alphabet.length/12);this.alphabet.length<3?(this.guards=this.seps.slice(0,g),this.seps=this.seps.slice(g)):(this.guards=this.alphabet.slice(0,g),this.alphabet=this.alphabet.slice(g)),this.guardsRegExp=c(this.guards),this.sepsRegExp=c(this.seps),this.allowedCharsRegExp=(g=[...this.alphabet,...this.guards,...this.seps],new RegExp(`^[${g.map(t=>d(t)).sort((t,e)=>e.length-t.length).join("")}]+$`))}encode(t,...e){let i=Array.isArray(t)?t:[...null!=t?[t]:[],...e];return 0===i.length?"":(i.every(n)||(i=i.map(t=>{return"bigint"==typeof t||"number"==typeof t?t:(t=String(t),h.test(t)?Number.parseInt(t,10):Number.NaN)})),i.every(r)?this._encode(i).join(""):"")}decode(t){return t&&"string"==typeof t&&0!==t.length?this._decode(t):[]}encodeHex(t){let e=t;switch(typeof e){case"bigint":e=e.toString(16);break;case"string":if(!/^[\dA-Fa-f]+$/.test(e))return"";break;default:throw new Error(`Hashids: The provided value is neither a string, nor a BigInt (got: ${typeof e})`)}var i,s,t=(i=e,s=t=>Number.parseInt(`1${t}`,16),Array.from({length:Math.ceil(i.length/12)},(t,e)=>s(i.slice(12*e,12*(e+1)))));return this.encode(t)}decodeHex(t){return this.decode(t).map(t=>t.toString(16).slice(1)).join("")}isValidId(t){return this.allowedCharsRegExp.test(t)}_encode(n){let r=this["alphabet"];var t=n.reduce((t,e,i)=>t+("bigint"==typeof e?Number(e%BigInt(i+100)):e%(i+100)),0);let h=[r[t%r.length]];const o=[...h],a=this["seps"],e=this["guards"];if(n.forEach((t,e)=>{var i=o.concat(this.salt,r);r=p(r,i);const s=((t,e)=>{const i=[];let s=t;if("bigint"==typeof s){const t=BigInt(e.length);for(;i.unshift(e[Number(s%t)]),s/=t,s>BigInt(0););}else for(;i.unshift(e[s%e.length]),s=Math.floor(s/e.length),0<s;);return i})(t,r);if(h.push(...s),e+1<n.length){const n=s[0].codePointAt(0)+e,r="bigint"==typeof t?Number(t%BigInt(n)):t%n;h.push(a[r%a.length])}}),h.length<this.minLength){const n=(t+h[0].codePointAt(0))%e.length;if(h.unshift(e[n]),h.length<this.minLength){const n=(t+h[2].codePointAt(0))%e.length;h.push(e[n])}}for(var i=Math.floor(r.length/2);h.length<this.minLength;){r=p(r,r),h.unshift(...r.slice(i)),h.push(...r.slice(0,i));const n=h.length-this.minLength;if(0<n){const r=n/2;h=h.slice(r,r+this.minLength)}}return h}_decode(t){if(!this.isValidId(t))throw new Error(`The provided ID (${t}) is invalid, as it contains characters that do not exist in the alphabet (${this.guards.join("")}${this.seps.join("")}${this.alphabet.join("")})`);const e=t.split(this.guardsRegExp),i=e[3===e.length||2===e.length?1:0];if(0===i.length)return[];const s=i[Symbol.iterator]().next().value,n=i.slice(s.length).split(this.sepsRegExp);let r=this.alphabet;const h=[];for(const t of n){const e=p(r,[s,...this.salt,...r].slice(0,r.length));h.push(((s,n)=>s.reduce((t,e)=>{var i=n.indexOf(e);if(-1===i)throw new Error(`The provided ID (${s.join("")}) is invalid, as it contains characters that do not exist in the alphabet (${n.join("")})`);if("bigint"==typeof t)return t*BigInt(n.length)+BigInt(i);e=t*n.length+i;if(Number.isSafeInteger(e))return e;if("function"==typeof BigInt)return BigInt(t)*BigInt(n.length)+BigInt(i);throw new Error("Unable to decode the provided string, due to lack of support for BigInt numbers in the current environment")},0))(Array.from(t),e)),r=e}return this._encode(h).join("")!==t?[]:h}}return t.default})()});